pipeline {
    agent any

    environment {
        BACKEND_DIR = 'bugtracker-backend'
        FRONTEND_DIR = 'bugtracker-frontend'
    }

    stages {
        stage('Checkout SCM') {
            steps {
                checkout scm
            }
        }

        stage('Unit Tests - Backend') {
            agent {
                docker {
                    image 'golang:1.21'
                    args '-v /var/jenkins_home:/var/jenkins_home' // optional, if you need caching
                }
            }
            steps {
                dir("${BACKEND_DIR}") {
                    script {
                        echo "Running Go tests..."
                    }
                    sh '''
                        go mod tidy
                        go test -v ./...
                        go test -coverprofile=coverage.out -covermode=atomic ./...
                        go tool cover -html=coverage.out -o coverage.html
                    '''
                }
            }
            post {
                always {
                    publishHTML(target: [
                        reportDir: "${BACKEND_DIR}",
                        reportFiles: 'coverage.html',
                        reportName: 'Backend Coverage Report'
                    ])
                }
                failure {
                    echo 'Backend tests failed!'
                }
            }
        }

        stage('Unit Tests - Frontend') {
            agent {
                docker {
                    image 'node:20'
                    args '-v /var/jenkins_home:/var/jenkins_home'
                }
            }
            steps {
                dir("${FRONTEND_DIR}") {
                    script {
                        echo "Running Frontend tests..."
                    }
                    sh '''
                        npm install
                        npm test
                    '''
                }
            }
            post {
                failure {
                    echo 'Frontend tests failed!'
                }
            }
        }
    }

    post {
        always {
            echo "Pipeline finished."
        }
        success {
            echo "All tests passed!"
        }
        failure {
            echo "Pipeline failed. Check logs!"
        }
    }
}
