pipeline {
    agent any

    environment {
        NODE_ENV = 'test'
        // Optional: paths for Go cache if needed
        GOCACHE = "${WORKSPACE}\\.gocache"
        GOPATH  = "${WORKSPACE}\\.gopath"
    }

    stages {

        stage('Unit Tests - Backend') {
            agent {
                docker {
                    image 'snakee/golang-junit:1.21'
                    reuseNode true
                }
            }
            steps {
                dir('bugtracker-backend') {
                    bat """
                        if not exist "%GOCACHE%" mkdir "%GOCACHE%"
                        if not exist "%GOPATH%" mkdir "%GOPATH%"
                        go test -v ./...
                    """
                }
            }
        }

        stage('Unit Tests - Frontend') {
            agent {
                docker {
                    image 'node:20-alpine'
                    reuseNode true
                }
            }
            steps {
                dir('bugtracker-frontend') {
                    bat """
                        npm ci
                        npm test -- --coverage --coverageReporters=text-summary --coverageReporters=text --coverageReporters=html --reporters=default --reporters=jest-junit
                    """
                }
            }
        }

    }

    post {
        always {
            echo "Archiving frontend test results..."
            junit 'bugtracker-frontend/test-results/**/*.xml'  // Adjust path if needed
        }
        success {
            echo "Pipeline completed successfully!"
        }
        failure {
            echo "Pipeline failed. Check test results for details."
        }
    }
}
